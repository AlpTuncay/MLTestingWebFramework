version: "3.7"

services:
#  rabbitmq-broker:
#    image: "rabbitmq"
#    ports:
#      - "5672:5672"
#      - "15672:15672"

  register:
    build:
      context: ./services/register
      dockerfile: Dockerfile
    volumes:
      - './services/register:/usr/src/ml-framework'
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=development
      - APP_SETTINGS=project.config.DevelopmentConfig
      - DATABASE_URL=postgres://postgres:postgres@users-db:5432/users_dev
      - DATABASE_TEST_URL=postgres://postgres:postgres@users-db:5432/users_test
      - RABBITMQ_USERNAME=guest
      - RABBITMQ_PASSWORD=guest
    depends_on:
      - users-db

  login:
    build:
      context: ./services/login
      dockerfile: Dockerfile
    volumes:
      - './services/login:/usr/src/ml-framework'
    ports:
      - "5001:5000"
    environment:
      - FLASK_ENV=development
      - APP_SETTINGS=project.config.DevelopmentConfig
      - DATABASE_URL=postgres://postgres:postgres@users-db:5432/users_dev
      - DATABASE_TEST_URL=postgres://postgres:postgres@users-db:5432/users_test
      - RABBITMQ_USERNAME=guest
      - RABBITMQ_PASSWORD=guest
    depends_on:
      - users-db
      - register

  api:
    build:
      context: services/api
      dockerfile: Dockerfile
    volumes:
      - './services/api:/usr/src/ml-framework'
    ports:
      - "5002:5000"
    environment:
      - FLASK_ENV=development
      - APP_SETTINGS=project.config.DevelopmentConfig
      - RABBITMQ_USERNAME=guest
      - RABBITMQ_PASSWORD=guest
    depends_on:
      - register
      - login

  views:
    build:
      context: services/views
      dockerfile: Dockerfile
    volumes:
      - './services/views:/usr/src/app'
      - '/usr/src/app/node_modules'
    ports:
      - "3001:3000"
    environment:
      - NODE_ENV=development
    depends_on:
      - api

  models:
    build:
      context: services/model_deployment
      dockerfile: Dockerfile
    volumes:
      - "./services/model_deployment:/usr/src/ml-framework"
    ports:
      - "5003:5000"
    environment:
      - FLASK_ENV=development
      - APP_SETTINGS=project.config.DevelopmentConfig
      - DATABASE_URL=postgres://postgres:postgres@models-db:5432/models_dev
      - DATABASE_TEST_URL=postgres://postgres:postgres@models-db:5432/models_dev
      - RABBITMQ_USERNAME=guest
      - RABBITMQ_PASSWORD=guest
    depends_on:
      - models-db

  model-info:
    build:
      context: services/model_information
      dockerfile: Dockerfile
    volumes:
      - "./services/model_information:/usr/src/ml-framework"
    ports:
      - "5004:5000"
    environment:
      - FLASK_ENV=development
      - APP_SETTINGS=project.config.DevelopmentConfig
      - DATABASE_URL=postgres://postgres:postgres@modelstate-db:5432/modelstate_dev
      - DATABASE_TEST_URL=postgres://postgres:postgres@modelstate-db:5432/modelstate_dev
      - RABBITMQ_USERNAME=guest
      - RABBITMQ_PASSWORD=guest
    depends_on:
      - modelstate-db
      - models-db

  ai:
    build:
      context: services/ai
      dockerfile: Dockerfile_ubuntu
    volumes:
      - "./services/ai:/usr/src/ml-framework"
    ports:
      - "5005:5000"
    environment:
      - FLASK_ENV=development
      - APP_SETTINGS=project.config.DevelopmentConfig
      - DATABASE_URL=postgres://postgres:postgres@modelstate-db:5432/modelstate_dev
      - DATABASE_TEST_URL=postgres://postgres:postgres@modelstate-db:5432/modelstate_dev
      - RABBITMQ_USERNAME=guest
      - RABBITMQ_PASSWORD=guest
      - LC_ALL=en_US.utf-8
      - LANG=en_US.utf-8
    depends_on:
      - modelstate-db

  modelstate-db:
    build:
      context: ./services/model_information/project/db
      dockerfile: Dockerfile
    ports:
      - "5434:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres


  users-db:
    build:
      context: ./services/register/project/db
      dockerfile: Dockerfile
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres

  models-db:
    build:
      context: ./services/model_deployment/project/db
      dockerfile: Dockerfile
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
